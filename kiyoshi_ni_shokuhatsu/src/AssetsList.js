// This class is autogenerated by tools/autogen_res.py. :::BB
class AssetsList {

    constructor() {
        this._assets = null;
        this._console = Factory.getConsole();
    }

    _sleep(ms) {
        return new Promise(waitFn => setTimeout(waitFn, ms));
    }

    async loadAll() {
        let expectLoad = 0;

        this._assets = new Map();
        for (let asset of this.listAssets()) {
            let filename = Utils.fullpathToFilename(asset);

            if (filename.substr(filename.length - 4) == '.png') {
                expectLoad += 1;
                let img = new Image();
                img.src = asset;

                let assets = this._assets;
                img.onload = function() {
                    assets.set(filename, img);
                }
            } else if (filename.substr(filename.length - 5) == '.json') {
                expectLoad += 1;
                let xmlHttpRequest = new XMLHttpRequest();
                xmlHttpRequest.open('GET', asset, true);

                let assets = this._assets;
                xmlHttpRequest.onreadystatechange = function(e) {
                    // status == 0 happens when testing from local .html files.
                    if (this.readyState == 4 && (this.status == 200 || this.status == 0)) {
                        let data = this.responseText;
                        assets.set(filename, data);
                    }
                }
                xmlHttpRequest.send();
            } else if (filename.substr(filename.length - 4) == '.ogg') {
                // :::BB load ogg same as image files...
                this._console.info('Skipping ' + filename);
            } else {
                throw new Error("Asset type not handled: " + asset);
            }
        }

        while (!(expectLoad == this._assets.size)) {
            await this._sleep(100);
        }
    }

    has(filename) {
        return this._assets.has(filename);
    }

    // Expect filename without path, e.g.: `hero.png`.
    //
    // We don't allow two assets of same name in different
    // folders.
    get(filename) {
        if (this._assets == null) {
            throw new Error("Assets not loaded. Did you forget to call loadAll()?");
        }

        if (!this._assets.has(filename)) {
            throw new Error("Asset not found: " + filename);
        }

        return this._assets.get(filename);
    }

    listAssets() {
        let assets = new Array();
// Reflect assets START.
assets.push('./gfx/misc/OBDisplayLivesAndTriggerNextLevel.png');
assets.push('./levels/reincarnation.json');
assets.push('./gfx/misc/spring_jump_up.png');
assets.push('./gfx/decoration/file_cabinet.png');
assets.push('./gfx/surface/ground_gray_brick.png');
assets.push('./gfx/OBFireSource.png');
assets.push('./gfx/traps/OBBlockUpIfAbove.png');
assets.push('./gfx/decoration/door_orange.png');
assets.push('./gfx/misc/button_floor_pressed.png');
assets.push('./gfx/decoration/ground_gray_brick_bg.png');
assets.push('./gfx/surface/ground_lr.png');
assets.push('./gfx/decoration/plant_tall_sideways.png');
assets.push('./gfx/decoration/brick_gray_bg.png');
assets.push('./gfx/decoration/plant_tall.png');
assets.push('./gfx/surface/wall_blue_top.png');
assets.push('./gfx/misc/spring_jump_up_extended.png');
assets.push('./gfx/misc/vampire_wannabe.png');
assets.push('./audio/sfx/jump_long.ogg');
assets.push('./audio/sfx/jump.ogg');
assets.push('./gfx/traps/OBSpikeFloorRaising.png');
assets.push('./gfx/decoration/elevator_electrocuted.png');
assets.push('./gfx/surface/block_fall_on_touch_damaged.png');
assets.push('./gfx/decoration/clock.png');
assets.push('./levels/game_over.json');
assets.push('./gfx/decoration/elevator_shaft.png');
assets.push('./gfx/OBFireball.png');
assets.push('./gfx/surface/ground_gray_brick_full.png');
assets.push('./gfx/surface/wall_blue_mid.png');
assets.push('./gfx/surface/OBSurface.png');
assets.push('./gfx/misc/doggy.png');
assets.push('./gfx/monsters/OBCitizenGeneric.png');
assets.push('./gfx/surface/ground_lr2_4x4_brown.png');
assets.push('./gfx/OBElevator.png');
assets.push('./gfx/OBBall.png');
assets.push('./gfx/decoration/ground.png');
assets.push('./gfx/misc/fireball_small.png');
assets.push('./gfx/decoration/ui_tips/keyboard_wasd_tip_space.png');
assets.push('./levels/ut_measure_fps_with_balls.json');
assets.push('./levels/won_game.json');
assets.push('./tools/test_input.png');
assets.push('./gfx/surface/block_fall_on_touch.png');
assets.push('./gfx/traps/OBSpikeCeiling.png');
assets.push('./gfx/surface/ground_lr2_4x4.png');
assets.push('./levels/through_town_02.json');
assets.push('./gfx/OBDoorOrangeTravel.png');
assets.push('./gfx/hero/OBHero_Jump.png');
assets.push('./gfx/misc/button_floor.png');
assets.push('./gfx/decoration/door_green.png');
assets.push('./gfx/hero/OBHero_Dead.png');
assets.push('./gfx/decoration/background/backwall_gray_01.png');
assets.push('./gfx/surface/block_fall_on_touch_damaged_02.png');
assets.push('./gfx/decoration/file_cabinet_color2.png');
assets.push('./gfx/decoration/explosion_small.png');
assets.push('./gfx/decoration/ui_tips/keyboard_wasd_tip_w.png');
assets.push('./gfx/monsters/OBCitizenGeneric_Walk.png');
assets.push('./gfx/misc/star_yellow.png');
assets.push('./levels/through_town.json');
assets.push('./gfx/surface/block_pushable.png');
assets.push('./tools/test_output.png');
assets.push('./gfx/hero/OBHero.png');
assets.push('./gfx/hero/OBHero_Duck.png');
assets.push('./gfx/decoration/plant_tiny_blue.png');
assets.push('./gfx/OBInvisibleMarker.png');
assets.push('./gfx/decoration/plant_tiny_brown.png');
assets.push('./gfx/decoration/background/backwall_gray_break_to_sky.png');
assets.push('./gfx/decoration/background/backsky.png');
assets.push('./gfx/traps/OBSpikeCeilingFalling.png');
assets.push('./levels/earthquake_building.json');
assets.push('./gfx/surface/block_falling_yellow.png');
assets.push('./gfx/decoration/plant_tall_brown.png');
assets.push('./gfx/monsters/OBCitizenGeneric_Dead.png');
assets.push('./gfx/surface/ground_lr2.png');
assets.push('./gfx/decoration/background/cloud.png');
assets.push('./gfx/traps/OBBlockFallIfAbove.png');
// Reflect assets END.
        return assets;
    }
}